{"nm":"preloader_art_blocks","ddd":0,"h":400,"w":400,"meta":{"g":"@lottiefiles/toolkit-js 0.33.2"},"layers":[{"ty":4,"nm":"preloader_art_blocks Outlines 5","sr":1,"st":-10,"op":240,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[200,200,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,200,0],"t":120,"ti":[0,8.33333301544189,0],"to":[0,-8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,150,0],"t":130,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,150,0],"t":140,"ti":[8.33333301544189,0,0],"to":[-8.33333301544189,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[150,150,0],"t":150,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[150,150,0],"t":160,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"s":[150,200,0],"t":170}],"ix":2,"x":"var $bm_rt;\nvar damping, elasticity, simulation, speedLimit, elasticity, retard, poids, precision, tempsDebut, tempsRedemarrage, stop, arrete, i, tempsRedemarrage, tempsDebut, temps, frameRedemarre, valeur, tempsClefProx, tempsDebut, tempsDebut, temps, spring, spring;\nvar fx = effect('Transform Spring');\ndamping = fx(2).value;\nelasticity = fx(1).value;\nsimulation = fx(3).value;\nspeedLimit = 0.1;\nif (damping == 0)\n    damping = 0.01;\nif (elasticity == 0)\n    elasticity = 0.01;\nretard = div(elasticity, damping);\npoids = div(div(1, damping), 10);\nprecision = thisComp.frameDuration;\nvar result = value;\nfunction worldVelocity(temps) {\n    var worldVelocityX, worldVelocityY;\n    worldVelocityX = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[0], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[0]), 100);\n    worldVelocityY = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[1], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[1]), 100);\n    return [\n        worldVelocityX,\n        worldVelocityY\n    ];\n}\nfunction worldSpeed(temps) {\n    return length(worldVelocity(temps));\n}\nif (simulation == 2) {\n    tempsDebut = 0;\n    tempsRedemarrage = 0;\n    stop = false;\n    arrete = false;\n    for (i = timeToFrames(time); i >= 0; i--) {\n        var instant = framesToTime(i);\n        var instantSuivant = sub(instant, precision);\n        if (worldSpeed(instant) == 0) {\n            if (tempsRedemarrage == 0)\n                tempsRedemarrage = instant;\n            if (worldSpeed(instantSuivant) != 0) {\n                tempsDebut = instantSuivant;\n                break;\n            }\n        }\n    }\n    temps = sub(time, tempsDebut);\n    frameRedemarre = timeToFrames(sub(time, tempsRedemarrage));\n    valeur = value;\n    if (frameRedemarre <= retard)\n        result = sub(value, mul(mul(worldVelocity(time), poids), div(frameRedemarre, retard)));\n    else\n        result = sub(value, mul(worldVelocity(time), poids));\n    if (worldSpeed(time) == 0) {\n        result = sum(result, mul(worldVelocity(tempsDebut), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping)))));\n    }\n} else if (numKeys > 1 && elasticity != 0 && nearestKey(time).index != 1 && length(velocity) <= speedLimit) {\n    tempsClefProx = nearestKey(time).time;\n    if (tempsClefProx <= time) {\n        tempsDebut = tempsClefProx;\n    } else {\n        tempsDebut = key(sub(nearestKey(time).index, 1)).time;\n    }\n    temps = sub(time, tempsDebut);\n    spring = mul(velocityAtTime(sub(tempsDebut, thisComp.frameDuration)), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping))));\n    if (speedLimit > 0)\n        spring = mul(spring, sub(1, div(length(velocity), speedLimit)));\n    result = sum(valueAtTime(tempsDebut), spring);\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/DUIK spatial spring","nm":"Transform Spring","ix":1,"en":1,"ef":[{"ty":0,"mn":"Pseudo/DUIK spatial spring-0001","nm":"Elasticity","ix":1,"v":{"a":0,"k":5,"ix":1}},{"ty":0,"mn":"Pseudo/DUIK spatial spring-0002","nm":"Damping","ix":2,"v":{"a":0,"k":15,"ix":2}},{"ty":7,"mn":"Pseudo/DUIK spatial spring-0003","nm":"Mode","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.844,0],[0,0],[0,2.843],[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0]],"o":[[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0],[2.844,0],[0,0],[0,2.843]],"v":[[15.851,21],[-15.85,21],[-21,15.851],[-21,-15.85],[-15.85,-21],[15.851,-21],[21,-15.85],[21,15.851]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.502,0.8314,0.8431],"t":120},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":130},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":160},{"s":[0.302,0.3725,0.4863],"t":170}],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[275,200],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1},{"ty":4,"nm":"preloader_art_blocks Outlines 4","sr":1,"st":-10,"op":240,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[200,200,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,200,0],"t":80,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":90,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":100,"ti":[-8.33333301544189,0,0],"to":[8.33333301544189,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,250,0],"t":110,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,250,0],"t":120,"ti":[0,8.33333301544189,0],"to":[0,-8.33333301544189,0]},{"s":[250,200,0],"t":130}],"ix":2,"x":"var $bm_rt;\nvar damping, elasticity, simulation, speedLimit, elasticity, retard, poids, precision, tempsDebut, tempsRedemarrage, stop, arrete, i, tempsRedemarrage, tempsDebut, temps, frameRedemarre, valeur, tempsClefProx, tempsDebut, tempsDebut, temps, spring, spring;\nvar fx = effect('Transform Spring');\ndamping = fx(2).value;\nelasticity = fx(1).value;\nsimulation = fx(3).value;\nspeedLimit = 0.1;\nif (damping == 0)\n    damping = 0.01;\nif (elasticity == 0)\n    elasticity = 0.01;\nretard = div(elasticity, damping);\npoids = div(div(1, damping), 10);\nprecision = thisComp.frameDuration;\nvar result = value;\nfunction worldVelocity(temps) {\n    var worldVelocityX, worldVelocityY;\n    worldVelocityX = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[0], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[0]), 100);\n    worldVelocityY = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[1], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[1]), 100);\n    return [\n        worldVelocityX,\n        worldVelocityY\n    ];\n}\nfunction worldSpeed(temps) {\n    return length(worldVelocity(temps));\n}\nif (simulation == 2) {\n    tempsDebut = 0;\n    tempsRedemarrage = 0;\n    stop = false;\n    arrete = false;\n    for (i = timeToFrames(time); i >= 0; i--) {\n        var instant = framesToTime(i);\n        var instantSuivant = sub(instant, precision);\n        if (worldSpeed(instant) == 0) {\n            if (tempsRedemarrage == 0)\n                tempsRedemarrage = instant;\n            if (worldSpeed(instantSuivant) != 0) {\n                tempsDebut = instantSuivant;\n                break;\n            }\n        }\n    }\n    temps = sub(time, tempsDebut);\n    frameRedemarre = timeToFrames(sub(time, tempsRedemarrage));\n    valeur = value;\n    if (frameRedemarre <= retard)\n        result = sub(value, mul(mul(worldVelocity(time), poids), div(frameRedemarre, retard)));\n    else\n        result = sub(value, mul(worldVelocity(time), poids));\n    if (worldSpeed(time) == 0) {\n        result = sum(result, mul(worldVelocity(tempsDebut), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping)))));\n    }\n} else if (numKeys > 1 && elasticity != 0 && nearestKey(time).index != 1 && length(velocity) <= speedLimit) {\n    tempsClefProx = nearestKey(time).time;\n    if (tempsClefProx <= time) {\n        tempsDebut = tempsClefProx;\n    } else {\n        tempsDebut = key(sub(nearestKey(time).index, 1)).time;\n    }\n    temps = sub(time, tempsDebut);\n    spring = mul(velocityAtTime(sub(tempsDebut, thisComp.frameDuration)), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping))));\n    if (speedLimit > 0)\n        spring = mul(spring, sub(1, div(length(velocity), speedLimit)));\n    result = sum(valueAtTime(tempsDebut), spring);\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/DUIK spatial spring","nm":"Transform Spring","ix":1,"en":1,"ef":[{"ty":0,"mn":"Pseudo/DUIK spatial spring-0001","nm":"Elasticity","ix":1,"v":{"a":0,"k":5,"ix":1}},{"ty":0,"mn":"Pseudo/DUIK spatial spring-0002","nm":"Damping","ix":2,"v":{"a":0,"k":15,"ix":2}},{"ty":7,"mn":"Pseudo/DUIK spatial spring-0003","nm":"Mode","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.844,0],[0,0],[0,2.843],[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0]],"o":[[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0],[2.844,0],[0,0],[0,2.843]],"v":[[15.851,21],[-15.85,21],[-21,15.851],[-21,-15.85],[-15.85,-21],[15.851,-21],[21,-15.85],[21,15.851]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.302,0.3725,0.4863],"t":80},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":90},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":120},{"s":[0.502,0.8314,0.8431],"t":130}],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[225,200],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2},{"ty":4,"nm":"preloader_art_blocks Outlines 3","sr":1,"st":-10,"op":240,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[200,200,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,200,0],"t":40,"ti":[0,8.33333301544189,0],"to":[0,-8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,150,0],"t":50,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,150,0],"t":60,"ti":[-8.33333301544189,0,0],"to":[8.33333301544189,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,150,0],"t":70,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,150,0],"t":80,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,200,0],"t":90,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,200,0],"t":160,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,250,0],"t":170,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,250,0],"t":180,"ti":[8.33333301544189,0,0],"to":[-8.33333301544189,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":190,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":200,"ti":[0,8.33333301544189,0],"to":[0,-8.33333301544189,0]},{"s":[200,200,0],"t":210}],"ix":2,"x":"var $bm_rt;\nvar damping, elasticity, simulation, speedLimit, elasticity, retard, poids, precision, tempsDebut, tempsRedemarrage, stop, arrete, i, tempsRedemarrage, tempsDebut, temps, frameRedemarre, valeur, tempsClefProx, tempsDebut, tempsDebut, temps, spring, spring;\nvar fx = effect('Transform Spring');\ndamping = fx(2).value;\nelasticity = fx(1).value;\nsimulation = fx(3).value;\nspeedLimit = 0.1;\nif (damping == 0)\n    damping = 0.01;\nif (elasticity == 0)\n    elasticity = 0.01;\nretard = div(elasticity, damping);\npoids = div(div(1, damping), 10);\nprecision = thisComp.frameDuration;\nvar result = value;\nfunction worldVelocity(temps) {\n    var worldVelocityX, worldVelocityY;\n    worldVelocityX = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[0], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[0]), 100);\n    worldVelocityY = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[1], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[1]), 100);\n    return [\n        worldVelocityX,\n        worldVelocityY\n    ];\n}\nfunction worldSpeed(temps) {\n    return length(worldVelocity(temps));\n}\nif (simulation == 2) {\n    tempsDebut = 0;\n    tempsRedemarrage = 0;\n    stop = false;\n    arrete = false;\n    for (i = timeToFrames(time); i >= 0; i--) {\n        var instant = framesToTime(i);\n        var instantSuivant = sub(instant, precision);\n        if (worldSpeed(instant) == 0) {\n            if (tempsRedemarrage == 0)\n                tempsRedemarrage = instant;\n            if (worldSpeed(instantSuivant) != 0) {\n                tempsDebut = instantSuivant;\n                break;\n            }\n        }\n    }\n    temps = sub(time, tempsDebut);\n    frameRedemarre = timeToFrames(sub(time, tempsRedemarrage));\n    valeur = value;\n    if (frameRedemarre <= retard)\n        result = sub(value, mul(mul(worldVelocity(time), poids), div(frameRedemarre, retard)));\n    else\n        result = sub(value, mul(worldVelocity(time), poids));\n    if (worldSpeed(time) == 0) {\n        result = sum(result, mul(worldVelocity(tempsDebut), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping)))));\n    }\n} else if (numKeys > 1 && elasticity != 0 && nearestKey(time).index != 1 && length(velocity) <= speedLimit) {\n    tempsClefProx = nearestKey(time).time;\n    if (tempsClefProx <= time) {\n        tempsDebut = tempsClefProx;\n    } else {\n        tempsDebut = key(sub(nearestKey(time).index, 1)).time;\n    }\n    temps = sub(time, tempsDebut);\n    spring = mul(velocityAtTime(sub(tempsDebut, thisComp.frameDuration)), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping))));\n    if (speedLimit > 0)\n        spring = mul(spring, sub(1, div(length(velocity), speedLimit)));\n    result = sum(valueAtTime(tempsDebut), spring);\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/DUIK spatial spring","nm":"Transform Spring","ix":1,"en":1,"ef":[{"ty":0,"mn":"Pseudo/DUIK spatial spring-0001","nm":"Elasticity","ix":1,"v":{"a":0,"k":5,"ix":1}},{"ty":0,"mn":"Pseudo/DUIK spatial spring-0002","nm":"Damping","ix":2,"v":{"a":0,"k":15,"ix":2}},{"ty":7,"mn":"Pseudo/DUIK spatial spring-0003","nm":"Mode","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.844,0],[0,0],[0,2.843],[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0]],"o":[[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0],[2.844,0],[0,0],[0,2.843]],"v":[[15.85,21],[-15.85,21],[-21,15.851],[-21,-15.85],[-15.85,-21],[15.85,-21],[21,-15.85],[21,15.851]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.0235,0.1098,0.2118],"t":40},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":50},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":80},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.302,0.3725,0.4863],"t":90},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.302,0.3725,0.4863],"t":160},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":170},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":200},{"s":[0.0235,0.1098,0.2118],"t":210}],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[175,200],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":3},{"ty":4,"nm":"preloader_art_blocks Outlines 2","sr":1,"st":-10,"op":240,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[200,200,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,200,0],"t":0,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":10,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":240,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"s":[200,300,0],"t":250}],"ix":2,"x":"var $bm_rt;\nvar damping, elasticity, simulation, speedLimit, elasticity, retard, poids, precision, tempsDebut, tempsRedemarrage, stop, arrete, i, tempsRedemarrage, tempsDebut, temps, frameRedemarre, valeur, tempsClefProx, tempsDebut, tempsDebut, temps, spring, spring;\nvar fx = effect('Transform Spring');\ndamping = fx(2).value;\nelasticity = fx(1).value;\nsimulation = fx(3).value;\nspeedLimit = 0.1;\nif (damping == 0)\n    damping = 0.01;\nif (elasticity == 0)\n    elasticity = 0.01;\nretard = div(elasticity, damping);\npoids = div(div(1, damping), 10);\nprecision = thisComp.frameDuration;\nvar result = value;\nfunction worldVelocity(temps) {\n    var worldVelocityX, worldVelocityY;\n    worldVelocityX = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[0], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[0]), 100);\n    worldVelocityY = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[1], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[1]), 100);\n    return [\n        worldVelocityX,\n        worldVelocityY\n    ];\n}\nfunction worldSpeed(temps) {\n    return length(worldVelocity(temps));\n}\nif (simulation == 2) {\n    tempsDebut = 0;\n    tempsRedemarrage = 0;\n    stop = false;\n    arrete = false;\n    for (i = timeToFrames(time); i >= 0; i--) {\n        var instant = framesToTime(i);\n        var instantSuivant = sub(instant, precision);\n        if (worldSpeed(instant) == 0) {\n            if (tempsRedemarrage == 0)\n                tempsRedemarrage = instant;\n            if (worldSpeed(instantSuivant) != 0) {\n                tempsDebut = instantSuivant;\n                break;\n            }\n        }\n    }\n    temps = sub(time, tempsDebut);\n    frameRedemarre = timeToFrames(sub(time, tempsRedemarrage));\n    valeur = value;\n    if (frameRedemarre <= retard)\n        result = sub(value, mul(mul(worldVelocity(time), poids), div(frameRedemarre, retard)));\n    else\n        result = sub(value, mul(worldVelocity(time), poids));\n    if (worldSpeed(time) == 0) {\n        result = sum(result, mul(worldVelocity(tempsDebut), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping)))));\n    }\n} else if (numKeys > 1 && elasticity != 0 && nearestKey(time).index != 1 && length(velocity) <= speedLimit) {\n    tempsClefProx = nearestKey(time).time;\n    if (tempsClefProx <= time) {\n        tempsDebut = tempsClefProx;\n    } else {\n        tempsDebut = key(sub(nearestKey(time).index, 1)).time;\n    }\n    temps = sub(time, tempsDebut);\n    spring = mul(velocityAtTime(sub(tempsDebut, thisComp.frameDuration)), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping))));\n    if (speedLimit > 0)\n        spring = mul(spring, sub(1, div(length(velocity), speedLimit)));\n    result = sum(valueAtTime(tempsDebut), spring);\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/DUIK spatial spring","nm":"Transform Spring","ix":1,"en":1,"ef":[{"ty":0,"mn":"Pseudo/DUIK spatial spring-0001","nm":"Elasticity","ix":1,"v":{"a":0,"k":5,"ix":1}},{"ty":0,"mn":"Pseudo/DUIK spatial spring-0002","nm":"Damping","ix":2,"v":{"a":0,"k":15,"ix":2}},{"ty":7,"mn":"Pseudo/DUIK spatial spring-0003","nm":"Mode","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.844,0],[0,0],[0,2.844],[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0]],"o":[[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0],[2.844,0],[0,0],[0,2.844]],"v":[[15.85,21],[-15.85,21],[-21,15.85],[-21,-15.85],[-15.85,-21],[15.85,-21],[21,-15.85],[21,15.85]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.502,0.8314,0.8431],"t":10},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.502,0.8314,0.8431],"t":240},{"s":[0.2902,0.3882,0.3922],"t":250}],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[125,150],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":4},{"ty":4,"nm":"preloader_art_blocks Outlines","sr":1,"st":-10,"op":240,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[200,200,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,200,0],"t":0,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":10,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,250,0],"t":20,"ti":[-8.33333301544189,0,0],"to":[8.33333301544189,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,250,0],"t":30,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,250,0],"t":40,"ti":[0,8.33333301544189,0],"to":[0,-8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,200,0],"t":50,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,200,0],"t":200,"ti":[0,8.33333301544189,0],"to":[0,-8.33333301544189,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,150,0],"t":210,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[250,150,0],"t":220,"ti":[8.33333301544189,0,0],"to":[-8.33333301544189,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,150,0],"t":230,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[200,150,0],"t":240,"ti":[0,-8.33333301544189,0],"to":[0,8.33333301544189,0]},{"s":[200,200,0],"t":250}],"ix":2,"x":"var $bm_rt;\nvar damping, elasticity, simulation, speedLimit, elasticity, retard, poids, precision, tempsDebut, tempsRedemarrage, stop, arrete, i, tempsRedemarrage, tempsDebut, temps, frameRedemarre, valeur, tempsClefProx, tempsDebut, tempsDebut, temps, spring, spring;\nvar fx = effect('Transform Spring');\ndamping = fx(2).value;\nelasticity = fx(1).value;\nsimulation = fx(3).value;\nspeedLimit = 0.1;\nif (damping == 0)\n    damping = 0.01;\nif (elasticity == 0)\n    elasticity = 0.01;\nretard = div(elasticity, damping);\npoids = div(div(1, damping), 10);\nprecision = thisComp.frameDuration;\nvar result = value;\nfunction worldVelocity(temps) {\n    var worldVelocityX, worldVelocityY;\n    worldVelocityX = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[0], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[0]), 100);\n    worldVelocityY = mul(sub(thisLayer.toWorld(thisLayer.anchorPoint, temps)[1], thisLayer.toWorld(thisLayer.anchorPoint, sub(temps, 0.01))[1]), 100);\n    return [\n        worldVelocityX,\n        worldVelocityY\n    ];\n}\nfunction worldSpeed(temps) {\n    return length(worldVelocity(temps));\n}\nif (simulation == 2) {\n    tempsDebut = 0;\n    tempsRedemarrage = 0;\n    stop = false;\n    arrete = false;\n    for (i = timeToFrames(time); i >= 0; i--) {\n        var instant = framesToTime(i);\n        var instantSuivant = sub(instant, precision);\n        if (worldSpeed(instant) == 0) {\n            if (tempsRedemarrage == 0)\n                tempsRedemarrage = instant;\n            if (worldSpeed(instantSuivant) != 0) {\n                tempsDebut = instantSuivant;\n                break;\n            }\n        }\n    }\n    temps = sub(time, tempsDebut);\n    frameRedemarre = timeToFrames(sub(time, tempsRedemarrage));\n    valeur = value;\n    if (frameRedemarre <= retard)\n        result = sub(value, mul(mul(worldVelocity(time), poids), div(frameRedemarre, retard)));\n    else\n        result = sub(value, mul(worldVelocity(time), poids));\n    if (worldSpeed(time) == 0) {\n        result = sum(result, mul(worldVelocity(tempsDebut), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping)))));\n    }\n} else if (numKeys > 1 && elasticity != 0 && nearestKey(time).index != 1 && length(velocity) <= speedLimit) {\n    tempsClefProx = nearestKey(time).time;\n    if (tempsClefProx <= time) {\n        tempsDebut = tempsClefProx;\n    } else {\n        tempsDebut = key(sub(nearestKey(time).index, 1)).time;\n    }\n    temps = sub(time, tempsDebut);\n    spring = mul(velocityAtTime(sub(tempsDebut, thisComp.frameDuration)), div(mul(div(0.15, elasticity), Math.sin(mul(mul(mul(elasticity, temps), 2), Math.PI))), Math.exp(mul(temps, damping))));\n    if (speedLimit > 0)\n        spring = mul(spring, sub(1, div(length(velocity), speedLimit)));\n    result = sum(valueAtTime(tempsDebut), spring);\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/DUIK spatial spring","nm":"Transform Spring","ix":1,"en":1,"ef":[{"ty":0,"mn":"Pseudo/DUIK spatial spring-0001","nm":"Elasticity","ix":1,"v":{"a":0,"k":5,"ix":1}},{"ty":0,"mn":"Pseudo/DUIK spatial spring-0002","nm":"Damping","ix":2,"v":{"a":0,"k":15,"ix":2}},{"ty":7,"mn":"Pseudo/DUIK spatial spring-0003","nm":"Mode","ix":3,"v":{"a":0,"k":1,"ix":3}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.844,0],[0,0],[0,2.843],[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0]],"o":[[0,0],[-2.844,0],[0,0],[0,-2.844],[0,0],[2.844,0],[0,0],[0,2.843]],"v":[[15.85,21],[-15.85,21],[-21,15.851],[-21,-15.85],[-15.85,-21],[15.85,-21],[21,-15.85],[21,15.851]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.502,0.8314,0.8431],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":10},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":40},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.0235,0.1098,0.2118],"t":50},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.0235,0.1098,0.2118],"t":200},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":210},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.2902,0.3882,0.3922],"t":240},{"s":[0.502,0.8314,0.8431],"t":250}],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[125,200],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":5}],"v":"5.3.4","fr":60,"op":240,"ip":0,"assets":[]}